tosca_definitions_version: alien_dsl_2_0_0

metadata:
  template_name: post-node-matching
  template_version: 2.0.0-SNAPSHOT
  template_author: Username

description: ""

imports:
  - alien-base-types:2.0.0-SNAPSHOT
  - docker-types:2.0.0-SNAPSHOT
  - tosca-normative-types:1.0.0-SNAPSHOT
  - org.alien4cloud.kubernetes.api:2.0.0-SNAPSHOT
  - docker-draft.sandbox.samples:2.0.0-SNAPSHOT

topology_template:
  node_templates:
    NocellarContainer:
      metadata:
        a4c_kubernetes-modifier: Replacement of a org.alien4cloud.extended.container.types.ContainerRuntime
      type: org.alien4cloud.kubernetes.api.types.Container
      properties:
        container:
          image: "afraisse/nodecellar:exp"
          name: "nodecellar--1839952299"
          resources:
            requests:
              memory: "128 MB"
              cpu: 1.0
            limits:
              memory: "128 MB"
              cpu: 1.0
          ports:
            -
              name: "nodecellar-app"
              containerPort: 3000
          command:
            - "/bin/bash"
            - "-c"
            - "cd /nodecellar && nodejs server.js"
      requirements:
        - hostedOnContainerDeploymentUnitHost:
            type_requirement: host
            node: NodecellarPod
            capability: tosca.capabilities.Container.Docker
            relationship: tosca.relationships.HostedOn
    Nodecellar:
      type: org.alien4cloud.nodes.Application.Docker.Nodecellar
      properties:
        docker_run_cmd: "cd /nodecellar && nodejs server.js"
        docker_env_vars:
          LOG_LEVEL: ""
        cpu_share: 1.0
        mem_share: "128 MB"
      requirements:
        - connectsToMongoMongo_db:
            type_requirement: mongo_db
            node: Mongo
            capability: org.alien4cloud.capabilities.endpoint.docker.Mongo
            relationship: tosca.relationships.ConnectsTo
        - hostedOnContainerRuntimeContainerRuntimeHost:
            type_requirement: host
            node: NocellarContainer
            capability: org.alien4cloud.extended.container.capabilities.ApplicationHost
            relationship: org.alien4cloud.extended.container.relationships.HostedOnContainerRuntime
      capabilities:
        nodecellar_app:
          properties:
            docker_bridge_port_mapping: 0
            port: 3000
            protocol: tcp
            secure: false
            network_name: PRIVATE
            initiator: source
        scalable:
          properties:
            min_instances: 1
            max_instances: 1
            default_instances: 1
    NodecellarPod:
      metadata:
        a4c_kubernetes-modifier: Replacement of a org.alien4cloud.extended.container.types.ContainerDeploymentUnit
      type: org.alien4cloud.kubernetes.api.types.Deployment
      properties:
        apiVersion: "apps/v1beta1"
        kind: Deployment
        spec:
          template:
            metadata:
              labels:
                app: "nodecellarpod--1286920069"
          replicas: 1
        metadata:
          name: "nodecellarpod--1286920069"
      requirements:
        - NodecellarPod_Mongo_mongo_db_Service:
            type_requirement: dependency
            node: Mongo_mongo_db_Service
            capability: tosca.capabilities.Node
            relationship: tosca.relationships.DependsOn
      capabilities:
        scalable:
          properties:
            min_instances: 1
            max_instances: 1
            default_instances: 1
    MongoContainer:
      metadata:
        a4c_kubernetes-modifier: Replacement of a org.alien4cloud.extended.container.types.ContainerRuntime
      type: org.alien4cloud.kubernetes.api.types.Container
      properties:
        container:
          image: "mongo:latest"
          name: "mongo--616698580"
          resources:
            requests:
              memory: "128 MB"
              cpu: 1.0
            limits:
              memory: "128 MB"
              cpu: 1.0
          ports:
            -
              name: "mongo-db"
              containerPort: 27017
      requirements:
        - MongoContainer_MongoContainerPod:
            type_requirement: host
            node: MongoContainerPod
            capability: tosca.capabilities.Container.Docker
            relationship: tosca.relationships.HostedOn
    Mongo:
      type: org.alien4cloud.nodes.Application.Docker.Mongo
      properties:
        cpu_share: 1.0
        mem_share: "128 MB"
      requirements:
        - hostedOnContainerRuntimeContainerRuntime2Host:
            type_requirement: host
            node: MongoContainer
            capability: org.alien4cloud.extended.container.capabilities.ApplicationHost
            relationship: org.alien4cloud.extended.container.relationships.HostedOnContainerRuntime
      capabilities:
        mongo_db:
          properties:
            docker_bridge_port_mapping: 0
            port: 27017
            api_version: v1
            protocol: tcp
            secure: false
            network_name: PRIVATE
            initiator: source
        scalable:
          properties:
            min_instances: 1
            max_instances: 1
            default_instances: 1
    MongoContainerPod:
      metadata:
        a4c_kubernetes-modifier: Created to host MongoContainer
      type: org.alien4cloud.kubernetes.api.types.Deployment
      properties:
        apiVersion: "apps/v1beta1"
        kind: Deployment
        spec:
          template:
            metadata:
              labels:
                app: "mongocontainerpod-661810815"
          replicas: 1
        metadata:
          name: "mongocontainerpod-661810815"
      capabilities:
        scalable:
          properties:
            min_instances: 1
            max_instances: 1
            default_instances: 1
    Mongo_mongo_db_Service:
      metadata:
        a4c_kubernetes-modifier: Proxy of node <Mongo> capability <mongo_db>
        a4c_kubernetes-modifier_service_endpoint: mongo_db
      type: org.alien4cloud.kubernetes.api.types.Service
      properties:
        apiVersion: v1
        kind: Service
        spec:
          service_type: NodePort
          selector:
            app: "mongocontainerpod-661810815"
          ports:
            -
              port: 27017
              name: "mongo-db"
              targetPort: "mongo-db"
        metadata:
          name: "mongo-mongo-db-service--1372310420"
      requirements:
        - Mongo_mongo_db_Service_MongoContainerPod:
            type_requirement: dependency
            node: MongoContainerPod
            capability: tosca.capabilities.Node
            relationship: tosca.relationships.DependsOn
    Nodecellar_nodecellar_app_Service:
      metadata:
        a4c_kubernetes-modifier: Proxy of node <Nodecellar> capability <nodecellar_app>
        a4c_kubernetes-modifier_service_endpoint: nodecellar_app
      type: org.alien4cloud.kubernetes.api.types.Service
      properties:
        apiVersion: v1
        kind: Service
        spec:
          service_type: NodePort
          selector:
            app: "nodecellarpod--1286920069"
          ports:
            -
              port: 3000
              name: "nodecellar-app"
              targetPort: "nodecellar-app"
        metadata:
          name: "nodecellar-nodecellar-app-service-332760315"
      requirements:
        - Nodecellar_nodecellar_app_Service_NodecellarPod:
            type_requirement: dependency
            node: NodecellarPod
            capability: tosca.capabilities.Node
            relationship: tosca.relationships.DependsOn